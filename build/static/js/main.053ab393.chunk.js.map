{"version":3,"sources":["Screen.js","Time.js","Weather.js","App.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","moment","require","Time","day","setDay","time","setTime","setInterval","format","Container","fluid","Row","Col","className","axios","api_config","method","url","params","lat","lon","appid","units","Weather","icon","imageIcon","setImageIcon","temp","setTemp","feelsLike","setFeelsLike","weatherDescription","setWeatherDescription","then","res","data","main","weather","Math","round","feels_like","description","src","alt","style","fontSize","modified","Array","split","forEach","word","push","charAt","toUpperCase","slice","join","formatWeatherDescription","App","lg","sm","md","textAlign","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEA,SAASA,IAAuB,IAAD,EACsBC,OACnD,MAAO,CACLC,MAH2B,EACrBC,WAGNC,OAJ2B,EACFC,aAOd,SAASC,IAAuB,IAAD,EACIC,mBAASP,KADb,mBACrCQ,EADqC,KACnBC,EADmB,KAY5C,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBT,KAItB,OADAC,OAAOW,iBAAiB,SAAUD,GAC3B,kBAAMV,OAAOY,oBAAoB,SAAUF,MACjD,IAEIH,E,iBCnBHM,EAASC,EAAQ,IAqBRC,MAnBf,WAAiB,IAAD,EACUT,mBAAS,MADnB,mBACLU,EADK,KACAC,EADA,OAEYX,mBAAS,MAFrB,mBAELY,EAFK,KAECC,EAFD,KAKZ,OAFAC,aAAY,WAAQH,EAAOJ,IAASQ,OAAO,SAAU,KACrDD,aAAY,WAAQD,EAAQN,IAASQ,OAAO,SAAU,KAElD,8BACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,UAAW,OAAhB,SAAwB,6BAAKV,QAEjC,cAACQ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,UAAW,OAAhB,SAAwB,6BAAKR,cCf3CS,EAAQb,EAAQ,I,EACUA,EAAQ,IAAhCQ,E,EAAAA,UAAWE,E,EAAAA,IAAKC,E,EAAAA,IAGlBG,EAAa,CACfC,OAAQ,MACRC,IAAI,kDACJC,OAAQ,CACJC,IAAK,UACLC,IAAK,WACLC,MAPI,mCAQJC,MAAO,aAqDAC,MAjDf,WAAoB,IAMEC,EANH,EACmB/B,mBAAS,MAD5B,mBACRgC,EADQ,KACGC,EADH,OAESjC,mBAAS,IAFlB,mBAERkC,EAFQ,KAEFC,EAFE,OAGmBnC,mBAAS,IAH5B,mBAGRoC,EAHQ,KAGGC,EAHH,OAIqCrC,mBAAS,IAJ9C,mBAIRsC,EAJQ,KAIYC,EAJZ,OAKWxC,IAAVJ,GALD,EAKPE,OALO,EAKCF,OA+BhB,OAHAmB,iBAXIO,EAAMC,GAAYkB,MAAK,SAAAC,GACnB,IAAMC,EAAOD,EAAIC,KACXC,EAAOD,EAAKC,KACZC,EAAUF,EAAKE,QAAQ,GAC7BT,EAAQU,KAAKC,MAAMH,EAAKT,OACxBD,EAAaW,EAAQb,MACrBM,EAAaQ,KAAKC,MAAMH,EAAKI,aAC7BR,EAAsBK,EAAQI,gBAIH,KAI/B,eAAC,EAAD,CAAW/B,OAAK,EAAhB,UACI,eAAC,EAAD,WACI,cAAC,EAAD,WAjCMc,EAiCSC,EA/BnB,qBAAKiB,IAAG,2CAAsClB,EAAtC,WAAqDmB,IAAI,eAAeC,MAAO,CAACxD,MAAOA,EAAQ,GAAIE,OAAQ,aAgC/G,eAAC,EAAD,CAAKsD,MAAO,CAACC,SAAU,IAAvB,UAA6BlB,EAA7B,UAAsC,uBAAtC,IA5BC,oBAAGiB,MAAO,CAACC,SAAU,IAArB,wBAAsChB,EAAtC,kBA8BL,cAAC,EAAD,UACI,cAAC,EAAD,UA7BqB,SAACY,GAC9B,IAAIK,EAAW,IAAIC,MAInB,OAHAN,EAAYO,MAAM,KAAKC,SAAQ,SAAAC,GAC3BJ,EAASK,KAAKD,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,OAErDR,EAASS,KAAK,KAwBPC,CAAyBzB,W,MCxBhC0B,MA3Bf,WAAgB,IAAD,EACajE,IAAlBF,EADK,EACLA,OADK,KACGF,MACoBK,sBAFvB,mBAGb,OAHa,UAIX,qBAAKoB,UAAW,MAAhB,SACE,eAACJ,EAAA,EAAD,CAAWC,OAAK,EAACkC,MAAO,CAACtD,OAAQA,GAAjC,UACE,eAACqB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAK8C,IAAE,EAACC,IAAE,EAACC,GAAK,OAAhB,cAAwB,cAAC,EAAD,IAAxB,OACA,cAAChD,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAK+C,IAAE,EAACC,IAAE,EAACF,GAAK,OAAOd,MAAO,CAACiB,UAAW,SAA1C,SAAoD,cAAC,EAAD,SAExD,cAAClD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKgC,MAAO,CAACiB,UAAW,SAAUvE,OAAQA,EAAO,EAAGwE,QAASxE,EAAO,EAAGuD,SAAU,IAAjF,kCAEF,cAAClC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,sBAEJ,cAACD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,YCvBRmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.053ab393.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import { React, useState } from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport \"./time.css\"\nconst moment = require(\"moment\")\n\nfunction Time() {\n    const [day, setDay] = useState(null)\n    const [time, setTime] = useState(null)\n    setInterval(() => { setDay(moment().format(\"LL\")) }, 1000)\n    setInterval(() => { setTime(moment().format(\"LT\")) }, 1000)\n    return (\n        <div>\n            <Container fluid>\n                <Row>\n                    <Col className={\"date\"}><h1>{day}</h1></Col>\n                </Row>\n                <Row>\n                    <Col className={\"time\"}><h3>{time}</h3></Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Time","import { React, useState } from 'react'\nimport useWindowDimensions from './Screen';\nconst axios = require('axios')\nconst { Container, Row, Col } = require('react-bootstrap')\n\nconst key = \"d52f5e56687724e820cd863b4f498f66\"\nconst api_config = {\n    method: 'get',\n    url: `https://api.openweathermap.org/data/2.5/weather`,\n    params: {\n        lat: \"35.9132\",\n        lon: \"-79.0558\",\n        appid: key,\n        units: \"imperial\"\n    }\n}\n\nfunction Weather() {\n    const [imageIcon, setImageIcon] = useState(null)\n    const [temp, setTemp] = useState(\"\")\n    const [feelsLike, setFeelsLike] = useState(\"\")\n    const [weatherDescription, setWeatherDescription] = useState(\"\")\n    const { height, width } = useWindowDimensions();\n    const getImage = (icon) => {\n        return (\n            <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"WEATHER_ICON\" style={{width: width / 10, height: \"auto\"}}/>\n        )\n    }\n    const getFeelsLike = () => {\n        return ( <p style={{fontSize: 10}}>Feels Like {feelsLike} °F</p> )\n    }\n    const formatWeatherDescription = (description) => {\n        var modified = new Array()\n        description.split(' ').forEach(word => {\n            modified.push(word.charAt(0).toUpperCase() + word.slice(1))\n        })\n        return modified.join(' ')\n    }\n    const parseWeatherDetails = () => {\n        axios(api_config).then(res => {\n            const data = res.data\n            const main = data.main\n            const weather = data.weather[0]\n            setTemp(Math.round(main.temp))\n            setImageIcon(weather.icon)\n            setFeelsLike(Math.round(main.feels_like))\n            setWeatherDescription(weather.description)\n        })\n        \n    }\n    setInterval(parseWeatherDetails(), 60000)\n\n    //setInterval(updateWeather, 600000)\n    return (\n        <Container fluid>\n            <Row> \n                <Col>{getImage(imageIcon)}</Col> \n                <Col style={{fontSize: 30}}>{temp} °F <br/> {getFeelsLike()}</Col>\n            </Row>\n            <Row>\n                <Col>{formatWeatherDescription(weatherDescription)}</Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Weather;","import { React, useState } from 'react'\nimport { Container, Col, Row } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useWindowDimensions from './Screen';\nimport Time from './Time';\nimport Weather from './Weather'\nimport \"./app.css\"\n<link href=\"https://fonts.googleapis.com/css?family=Bungee+Inline\" rel=\"stylesheet\"> </link>\n\nfunction App() {\n  const { height, width } = useWindowDimensions();\n  const [ topHeight, setTopHeight ] = useState()\n  return (\n    <div className={\"app\"}>\n      <Container fluid style={{height: height}}>\n        <Row>\n          <Col lg sm md = \"auto\"> <Time /> </Col>\n          <Col />\n          <Col sm md lg = \"auto\" style={{textAlign: \"right\"}}><Weather /></Col>\n        </Row>\n      <Row>\n        <Col style={{textAlign: \"center\", height: height/2, padding: height/4, fontSize: 30}}>Hello, Sheel Patel</Col>\n      </Row>\n      <Row>\n          <Col >Music</Col>\n      </Row>\n      <Row> \n        <Col>\n\n        </Col>\n      </Row>\n      </Container>\n    </div>\n  )}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}